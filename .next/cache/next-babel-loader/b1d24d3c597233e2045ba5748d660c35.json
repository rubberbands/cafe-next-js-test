{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/Layout';\nimport getData from '../data/data.js';\n\nconst EmployeePage = props => __jsx(Layout, null, __jsx(\"div\", {\n  className: \"container\"\n}, __jsx(\"div\", {\n  className: \"employeeProfile\"\n}, __jsx(\"p\", null, \"Name : \", props.employee.name), __jsx(\"p\", null, \"Address : \", props.employee.address), __jsx(\"p\", null, \"Email : \", props.employee.email), __jsx(\"p\", null, \"Phone : \", props.employee.phone))));\n\nEmployeePage.getInitialProps = async ({\n  query\n}) => {\n  // could fetch data here\n  let {\n    id\n  } = _objectSpread({}, query);\n\n  let employee = getData().find(m => m.id == id);\n  return {\n    employee\n  };\n};\n\nexport default EmployeePage;","map":{"version":3,"sources":["/Users/geralditanis/Documents/next-mysql/pages/employee.js"],"names":["Layout","getData","EmployeePage","props","employee","name","address","email","phone","getInitialProps","query","id","find","m"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IACjB,MAAC,MAAD,QACI;AAAK,EAAA,SAAS,EAAC;AAAf,GACI;AAAK,EAAA,SAAS,EAAC;AAAf,GACI,4BAAWA,KAAK,CAACC,QAAN,CAAeC,IAA1B,CADJ,EAEI,+BAAcF,KAAK,CAACC,QAAN,CAAeE,OAA7B,CAFJ,EAGI,6BAAYH,KAAK,CAACC,QAAN,CAAeG,KAA3B,CAHJ,EAII,6BAAYJ,KAAK,CAACC,QAAN,CAAeI,KAA3B,CAJJ,CADJ,CADJ,CADJ;;AAaAN,YAAY,CAACO,eAAb,GAA+B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AAC9C;AACA,MAAI;AAACC,IAAAA;AAAD,wBAAWD,KAAX,CAAJ;;AACA,MAAIN,QAAQ,GAAGH,OAAO,GAAGW,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACF,EAAF,IAAQA,EAA5B,CAAf;AACA,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACH,CALD;;AAOA,eAAeF,YAAf","sourcesContent":["import Layout from '../components/Layout';\nimport getData from '../data/data.js'\n\nconst EmployeePage = (props) => (\n    <Layout>\n        <div className=\"container\">\n            <div className=\"employeeProfile\">\n                <p>Name : {props.employee.name}</p>\n                <p>Address : {props.employee.address}</p>\n                <p>Email : {props.employee.email}</p>\n                <p>Phone : {props.employee.phone}</p>\n            </div>\n        </div>\n    </Layout>\n)\n\nEmployeePage.getInitialProps = async ({query}) => {\n    // could fetch data here\n    let {id} = {...query}\n    let employee = getData().find(m => m.id == id)\n    return { employee } \n}\n\nexport default EmployeePage"]},"metadata":{},"sourceType":"module"}